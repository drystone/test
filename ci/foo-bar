#!/usr/bin/env bash

set -e -o pipefail

cd $(dirname $0)

echo downloading executables
curl -Ls https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64 >/tmp/kind
echo 1d86e3069ffbe3da9f1a918618aecbc778e00c75f838882d0dfa2d363bc4a68c /tmp/kind | sha256sum --check --quiet
chmod +x /tmp/kind
curl -Ls https://dl.k8s.io/release/v1.30.2/bin/linux/amd64/kubectl >/tmp/kubectl
echo c6e9c45ce3f82c90663e3c30db3b27c167e8b19d83ed4048b61c1013f6a7c66e /tmp/kubectl | sha256sum --check --quiet
chmod +x /tmp/kubectl

echo starting cluster
/tmp/kind delete cluster >/dev/null 2>&1 || true
/tmp/kind create cluster --config cluster.yaml >/dev/null 2>&1

echo configuring deployments
/tmp/kubectl kustomize kustomize/overlays/all | /tmp/kubectl apply -f - >/dev/null 2>&1

echo installing ingress controller
/tmp/kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml >/dev/null 2>&1
# delete this according to SO 61616203, otherwise we can't immediately create ingress
/tmp/kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission >/dev/null 2>&1
/tmp/kubectl wait -n ingress-nginx --for=condition=ready pod --selector=app.kubernetes.io/component=controller --timeout=5m >/dev/null 2>&1

echo configuring ingress
/tmp/kubectl apply -f ingress.yaml >/dev/null 2>&1

echo waiting for endpoints
until (curl -f foo.localhost && curl -f bar.localhost) >/dev/null 2>&1; do
  sleep 1
done

echo load testing
cat << EOF >/tmp/test-result
k6 test results:

EOF
docker run -q --rm --network host -v ${PWD}/k6.js:/k6.js grafana/k6 run -q /k6.js >>/tmp/test-result

exit

echo cleaning up
/tmp/kind delete cluster >/dev/null 2>&1
rm /tmp/{kind,kubectl}
